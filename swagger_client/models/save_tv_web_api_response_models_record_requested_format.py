# coding: utf-8

"""
    Save.TV API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v3
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class SaveTVWebApiResponseModelsRecordRequestedFormat(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'record_state': 'SaveTVWebApiResponseModelsRecordState',
        'record_format': 'SaveTVWebApiResponseModelsRecordFormat',
        'uncut_video_size': 'int',
        'cut_video_size': 'int',
        'record_state_message': 'str',
        'retention_date': 'datetime'
    }

    attribute_map = {
        'record_state': 'recordState',
        'record_format': 'recordFormat',
        'uncut_video_size': 'uncutVideoSize',
        'cut_video_size': 'cutVideoSize',
        'record_state_message': 'recordStateMessage',
        'retention_date': 'retentionDate'
    }

    def __init__(self, record_state=None, record_format=None, uncut_video_size=None, cut_video_size=None, record_state_message=None, retention_date=None):  # noqa: E501
        """SaveTVWebApiResponseModelsRecordRequestedFormat - a model defined in Swagger"""  # noqa: E501

        self._record_state = None
        self._record_format = None
        self._uncut_video_size = None
        self._cut_video_size = None
        self._record_state_message = None
        self._retention_date = None
        self.discriminator = None

        if record_state is not None:
            self.record_state = record_state
        if record_format is not None:
            self.record_format = record_format
        if uncut_video_size is not None:
            self.uncut_video_size = uncut_video_size
        if cut_video_size is not None:
            self.cut_video_size = cut_video_size
        if record_state_message is not None:
            self.record_state_message = record_state_message
        if retention_date is not None:
            self.retention_date = retention_date

    @property
    def record_state(self):
        """Gets the record_state of this SaveTVWebApiResponseModelsRecordRequestedFormat.  # noqa: E501


        :return: The record_state of this SaveTVWebApiResponseModelsRecordRequestedFormat.  # noqa: E501
        :rtype: SaveTVWebApiResponseModelsRecordState
        """
        return self._record_state

    @record_state.setter
    def record_state(self, record_state):
        """Sets the record_state of this SaveTVWebApiResponseModelsRecordRequestedFormat.


        :param record_state: The record_state of this SaveTVWebApiResponseModelsRecordRequestedFormat.  # noqa: E501
        :type: SaveTVWebApiResponseModelsRecordState
        """

        self._record_state = record_state

    @property
    def record_format(self):
        """Gets the record_format of this SaveTVWebApiResponseModelsRecordRequestedFormat.  # noqa: E501


        :return: The record_format of this SaveTVWebApiResponseModelsRecordRequestedFormat.  # noqa: E501
        :rtype: SaveTVWebApiResponseModelsRecordFormat
        """
        return self._record_format

    @record_format.setter
    def record_format(self, record_format):
        """Sets the record_format of this SaveTVWebApiResponseModelsRecordRequestedFormat.


        :param record_format: The record_format of this SaveTVWebApiResponseModelsRecordRequestedFormat.  # noqa: E501
        :type: SaveTVWebApiResponseModelsRecordFormat
        """

        self._record_format = record_format

    @property
    def uncut_video_size(self):
        """Gets the uncut_video_size of this SaveTVWebApiResponseModelsRecordRequestedFormat.  # noqa: E501


        :return: The uncut_video_size of this SaveTVWebApiResponseModelsRecordRequestedFormat.  # noqa: E501
        :rtype: int
        """
        return self._uncut_video_size

    @uncut_video_size.setter
    def uncut_video_size(self, uncut_video_size):
        """Sets the uncut_video_size of this SaveTVWebApiResponseModelsRecordRequestedFormat.


        :param uncut_video_size: The uncut_video_size of this SaveTVWebApiResponseModelsRecordRequestedFormat.  # noqa: E501
        :type: int
        """

        self._uncut_video_size = uncut_video_size

    @property
    def cut_video_size(self):
        """Gets the cut_video_size of this SaveTVWebApiResponseModelsRecordRequestedFormat.  # noqa: E501


        :return: The cut_video_size of this SaveTVWebApiResponseModelsRecordRequestedFormat.  # noqa: E501
        :rtype: int
        """
        return self._cut_video_size

    @cut_video_size.setter
    def cut_video_size(self, cut_video_size):
        """Sets the cut_video_size of this SaveTVWebApiResponseModelsRecordRequestedFormat.


        :param cut_video_size: The cut_video_size of this SaveTVWebApiResponseModelsRecordRequestedFormat.  # noqa: E501
        :type: int
        """

        self._cut_video_size = cut_video_size

    @property
    def record_state_message(self):
        """Gets the record_state_message of this SaveTVWebApiResponseModelsRecordRequestedFormat.  # noqa: E501


        :return: The record_state_message of this SaveTVWebApiResponseModelsRecordRequestedFormat.  # noqa: E501
        :rtype: str
        """
        return self._record_state_message

    @record_state_message.setter
    def record_state_message(self, record_state_message):
        """Sets the record_state_message of this SaveTVWebApiResponseModelsRecordRequestedFormat.


        :param record_state_message: The record_state_message of this SaveTVWebApiResponseModelsRecordRequestedFormat.  # noqa: E501
        :type: str
        """

        self._record_state_message = record_state_message

    @property
    def retention_date(self):
        """Gets the retention_date of this SaveTVWebApiResponseModelsRecordRequestedFormat.  # noqa: E501


        :return: The retention_date of this SaveTVWebApiResponseModelsRecordRequestedFormat.  # noqa: E501
        :rtype: datetime
        """
        return self._retention_date

    @retention_date.setter
    def retention_date(self, retention_date):
        """Sets the retention_date of this SaveTVWebApiResponseModelsRecordRequestedFormat.


        :param retention_date: The retention_date of this SaveTVWebApiResponseModelsRecordRequestedFormat.  # noqa: E501
        :type: datetime
        """

        self._retention_date = retention_date

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SaveTVWebApiResponseModelsRecordRequestedFormat, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SaveTVWebApiResponseModelsRecordRequestedFormat):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
