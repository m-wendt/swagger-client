# coding: utf-8

"""
    Save.TV API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v3
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class SaveTVWebApiResponseModelsStar(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'name': 'str',
        'nick_name': 'str',
        'description': 'str',
        'birthplace': 'str',
        'birthdate': 'str',
        'place_of_death': 'str',
        'date_of_death': 'str',
        'height': 'str',
        'is_highlight': 'bool',
        'awards': 'list[SaveTVWebApiResponseModelsStarAward]',
        'links': 'list[SaveTVWebApiResponseModelsStarLink]',
        'image_urls100': 'list[str]',
        'image_urls250': 'list[str]',
        'image_urls500': 'list[str]',
        'alternative_name': 'str'
    }

    attribute_map = {
        'id': 'id',
        'name': 'name',
        'nick_name': 'nickName',
        'description': 'description',
        'birthplace': 'birthplace',
        'birthdate': 'birthdate',
        'place_of_death': 'placeOfDeath',
        'date_of_death': 'dateOfDeath',
        'height': 'height',
        'is_highlight': 'isHighlight',
        'awards': 'awards',
        'links': 'links',
        'image_urls100': 'imageUrls100',
        'image_urls250': 'imageUrls250',
        'image_urls500': 'imageUrls500',
        'alternative_name': 'alternativeName'
    }

    def __init__(self, id=None, name=None, nick_name=None, description=None, birthplace=None, birthdate=None, place_of_death=None, date_of_death=None, height=None, is_highlight=None, awards=None, links=None, image_urls100=None, image_urls250=None, image_urls500=None, alternative_name=None):  # noqa: E501
        """SaveTVWebApiResponseModelsStar - a model defined in Swagger"""  # noqa: E501

        self._id = None
        self._name = None
        self._nick_name = None
        self._description = None
        self._birthplace = None
        self._birthdate = None
        self._place_of_death = None
        self._date_of_death = None
        self._height = None
        self._is_highlight = None
        self._awards = None
        self._links = None
        self._image_urls100 = None
        self._image_urls250 = None
        self._image_urls500 = None
        self._alternative_name = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if name is not None:
            self.name = name
        if nick_name is not None:
            self.nick_name = nick_name
        if description is not None:
            self.description = description
        if birthplace is not None:
            self.birthplace = birthplace
        if birthdate is not None:
            self.birthdate = birthdate
        if place_of_death is not None:
            self.place_of_death = place_of_death
        if date_of_death is not None:
            self.date_of_death = date_of_death
        if height is not None:
            self.height = height
        if is_highlight is not None:
            self.is_highlight = is_highlight
        if awards is not None:
            self.awards = awards
        if links is not None:
            self.links = links
        if image_urls100 is not None:
            self.image_urls100 = image_urls100
        if image_urls250 is not None:
            self.image_urls250 = image_urls250
        if image_urls500 is not None:
            self.image_urls500 = image_urls500
        if alternative_name is not None:
            self.alternative_name = alternative_name

    @property
    def id(self):
        """Gets the id of this SaveTVWebApiResponseModelsStar.  # noqa: E501


        :return: The id of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SaveTVWebApiResponseModelsStar.


        :param id: The id of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this SaveTVWebApiResponseModelsStar.  # noqa: E501


        :return: The name of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SaveTVWebApiResponseModelsStar.


        :param name: The name of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def nick_name(self):
        """Gets the nick_name of this SaveTVWebApiResponseModelsStar.  # noqa: E501


        :return: The nick_name of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :rtype: str
        """
        return self._nick_name

    @nick_name.setter
    def nick_name(self, nick_name):
        """Sets the nick_name of this SaveTVWebApiResponseModelsStar.


        :param nick_name: The nick_name of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :type: str
        """

        self._nick_name = nick_name

    @property
    def description(self):
        """Gets the description of this SaveTVWebApiResponseModelsStar.  # noqa: E501


        :return: The description of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SaveTVWebApiResponseModelsStar.


        :param description: The description of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def birthplace(self):
        """Gets the birthplace of this SaveTVWebApiResponseModelsStar.  # noqa: E501


        :return: The birthplace of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :rtype: str
        """
        return self._birthplace

    @birthplace.setter
    def birthplace(self, birthplace):
        """Sets the birthplace of this SaveTVWebApiResponseModelsStar.


        :param birthplace: The birthplace of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :type: str
        """

        self._birthplace = birthplace

    @property
    def birthdate(self):
        """Gets the birthdate of this SaveTVWebApiResponseModelsStar.  # noqa: E501


        :return: The birthdate of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :rtype: str
        """
        return self._birthdate

    @birthdate.setter
    def birthdate(self, birthdate):
        """Sets the birthdate of this SaveTVWebApiResponseModelsStar.


        :param birthdate: The birthdate of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :type: str
        """

        self._birthdate = birthdate

    @property
    def place_of_death(self):
        """Gets the place_of_death of this SaveTVWebApiResponseModelsStar.  # noqa: E501


        :return: The place_of_death of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :rtype: str
        """
        return self._place_of_death

    @place_of_death.setter
    def place_of_death(self, place_of_death):
        """Sets the place_of_death of this SaveTVWebApiResponseModelsStar.


        :param place_of_death: The place_of_death of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :type: str
        """

        self._place_of_death = place_of_death

    @property
    def date_of_death(self):
        """Gets the date_of_death of this SaveTVWebApiResponseModelsStar.  # noqa: E501


        :return: The date_of_death of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :rtype: str
        """
        return self._date_of_death

    @date_of_death.setter
    def date_of_death(self, date_of_death):
        """Sets the date_of_death of this SaveTVWebApiResponseModelsStar.


        :param date_of_death: The date_of_death of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :type: str
        """

        self._date_of_death = date_of_death

    @property
    def height(self):
        """Gets the height of this SaveTVWebApiResponseModelsStar.  # noqa: E501


        :return: The height of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :rtype: str
        """
        return self._height

    @height.setter
    def height(self, height):
        """Sets the height of this SaveTVWebApiResponseModelsStar.


        :param height: The height of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :type: str
        """

        self._height = height

    @property
    def is_highlight(self):
        """Gets the is_highlight of this SaveTVWebApiResponseModelsStar.  # noqa: E501


        :return: The is_highlight of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :rtype: bool
        """
        return self._is_highlight

    @is_highlight.setter
    def is_highlight(self, is_highlight):
        """Sets the is_highlight of this SaveTVWebApiResponseModelsStar.


        :param is_highlight: The is_highlight of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :type: bool
        """

        self._is_highlight = is_highlight

    @property
    def awards(self):
        """Gets the awards of this SaveTVWebApiResponseModelsStar.  # noqa: E501


        :return: The awards of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :rtype: list[SaveTVWebApiResponseModelsStarAward]
        """
        return self._awards

    @awards.setter
    def awards(self, awards):
        """Sets the awards of this SaveTVWebApiResponseModelsStar.


        :param awards: The awards of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :type: list[SaveTVWebApiResponseModelsStarAward]
        """

        self._awards = awards

    @property
    def links(self):
        """Gets the links of this SaveTVWebApiResponseModelsStar.  # noqa: E501


        :return: The links of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :rtype: list[SaveTVWebApiResponseModelsStarLink]
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this SaveTVWebApiResponseModelsStar.


        :param links: The links of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :type: list[SaveTVWebApiResponseModelsStarLink]
        """

        self._links = links

    @property
    def image_urls100(self):
        """Gets the image_urls100 of this SaveTVWebApiResponseModelsStar.  # noqa: E501


        :return: The image_urls100 of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :rtype: list[str]
        """
        return self._image_urls100

    @image_urls100.setter
    def image_urls100(self, image_urls100):
        """Sets the image_urls100 of this SaveTVWebApiResponseModelsStar.


        :param image_urls100: The image_urls100 of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :type: list[str]
        """

        self._image_urls100 = image_urls100

    @property
    def image_urls250(self):
        """Gets the image_urls250 of this SaveTVWebApiResponseModelsStar.  # noqa: E501


        :return: The image_urls250 of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :rtype: list[str]
        """
        return self._image_urls250

    @image_urls250.setter
    def image_urls250(self, image_urls250):
        """Sets the image_urls250 of this SaveTVWebApiResponseModelsStar.


        :param image_urls250: The image_urls250 of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :type: list[str]
        """

        self._image_urls250 = image_urls250

    @property
    def image_urls500(self):
        """Gets the image_urls500 of this SaveTVWebApiResponseModelsStar.  # noqa: E501


        :return: The image_urls500 of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :rtype: list[str]
        """
        return self._image_urls500

    @image_urls500.setter
    def image_urls500(self, image_urls500):
        """Sets the image_urls500 of this SaveTVWebApiResponseModelsStar.


        :param image_urls500: The image_urls500 of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :type: list[str]
        """

        self._image_urls500 = image_urls500

    @property
    def alternative_name(self):
        """Gets the alternative_name of this SaveTVWebApiResponseModelsStar.  # noqa: E501


        :return: The alternative_name of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :rtype: str
        """
        return self._alternative_name

    @alternative_name.setter
    def alternative_name(self, alternative_name):
        """Sets the alternative_name of this SaveTVWebApiResponseModelsStar.


        :param alternative_name: The alternative_name of this SaveTVWebApiResponseModelsStar.  # noqa: E501
        :type: str
        """

        self._alternative_name = alternative_name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SaveTVWebApiResponseModelsStar, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SaveTVWebApiResponseModelsStar):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
