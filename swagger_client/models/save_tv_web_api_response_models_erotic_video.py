# coding: utf-8

"""
    Save.TV API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v3
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class SaveTVWebApiResponseModelsEroticVideo(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'provider_id': 'int',
        'title': 'str',
        'original_title': 'str',
        'description': 'str',
        'length': 'int',
        'country': 'str',
        'year': 'int',
        'directory': 'str',
        'label': 'str',
        'cast': 'list[str]',
        'tags': 'list[str]'
    }

    attribute_map = {
        'id': 'id',
        'provider_id': 'providerId',
        'title': 'title',
        'original_title': 'originalTitle',
        'description': 'description',
        'length': 'length',
        'country': 'country',
        'year': 'year',
        'directory': 'directory',
        'label': 'label',
        'cast': 'cast',
        'tags': 'tags'
    }

    def __init__(self, id=None, provider_id=None, title=None, original_title=None, description=None, length=None, country=None, year=None, directory=None, label=None, cast=None, tags=None):  # noqa: E501
        """SaveTVWebApiResponseModelsEroticVideo - a model defined in Swagger"""  # noqa: E501

        self._id = None
        self._provider_id = None
        self._title = None
        self._original_title = None
        self._description = None
        self._length = None
        self._country = None
        self._year = None
        self._directory = None
        self._label = None
        self._cast = None
        self._tags = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if provider_id is not None:
            self.provider_id = provider_id
        if title is not None:
            self.title = title
        if original_title is not None:
            self.original_title = original_title
        if description is not None:
            self.description = description
        if length is not None:
            self.length = length
        if country is not None:
            self.country = country
        if year is not None:
            self.year = year
        if directory is not None:
            self.directory = directory
        if label is not None:
            self.label = label
        if cast is not None:
            self.cast = cast
        if tags is not None:
            self.tags = tags

    @property
    def id(self):
        """Gets the id of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501


        :return: The id of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SaveTVWebApiResponseModelsEroticVideo.


        :param id: The id of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def provider_id(self):
        """Gets the provider_id of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501


        :return: The provider_id of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501
        :rtype: int
        """
        return self._provider_id

    @provider_id.setter
    def provider_id(self, provider_id):
        """Sets the provider_id of this SaveTVWebApiResponseModelsEroticVideo.


        :param provider_id: The provider_id of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501
        :type: int
        """

        self._provider_id = provider_id

    @property
    def title(self):
        """Gets the title of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501


        :return: The title of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this SaveTVWebApiResponseModelsEroticVideo.


        :param title: The title of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501
        :type: str
        """

        self._title = title

    @property
    def original_title(self):
        """Gets the original_title of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501


        :return: The original_title of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501
        :rtype: str
        """
        return self._original_title

    @original_title.setter
    def original_title(self, original_title):
        """Sets the original_title of this SaveTVWebApiResponseModelsEroticVideo.


        :param original_title: The original_title of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501
        :type: str
        """

        self._original_title = original_title

    @property
    def description(self):
        """Gets the description of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501


        :return: The description of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SaveTVWebApiResponseModelsEroticVideo.


        :param description: The description of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def length(self):
        """Gets the length of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501


        :return: The length of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501
        :rtype: int
        """
        return self._length

    @length.setter
    def length(self, length):
        """Sets the length of this SaveTVWebApiResponseModelsEroticVideo.


        :param length: The length of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501
        :type: int
        """

        self._length = length

    @property
    def country(self):
        """Gets the country of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501


        :return: The country of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this SaveTVWebApiResponseModelsEroticVideo.


        :param country: The country of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501
        :type: str
        """

        self._country = country

    @property
    def year(self):
        """Gets the year of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501


        :return: The year of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501
        :rtype: int
        """
        return self._year

    @year.setter
    def year(self, year):
        """Sets the year of this SaveTVWebApiResponseModelsEroticVideo.


        :param year: The year of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501
        :type: int
        """

        self._year = year

    @property
    def directory(self):
        """Gets the directory of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501


        :return: The directory of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501
        :rtype: str
        """
        return self._directory

    @directory.setter
    def directory(self, directory):
        """Sets the directory of this SaveTVWebApiResponseModelsEroticVideo.


        :param directory: The directory of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501
        :type: str
        """

        self._directory = directory

    @property
    def label(self):
        """Gets the label of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501


        :return: The label of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this SaveTVWebApiResponseModelsEroticVideo.


        :param label: The label of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501
        :type: str
        """

        self._label = label

    @property
    def cast(self):
        """Gets the cast of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501


        :return: The cast of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501
        :rtype: list[str]
        """
        return self._cast

    @cast.setter
    def cast(self, cast):
        """Sets the cast of this SaveTVWebApiResponseModelsEroticVideo.


        :param cast: The cast of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501
        :type: list[str]
        """

        self._cast = cast

    @property
    def tags(self):
        """Gets the tags of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501


        :return: The tags of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501
        :rtype: list[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this SaveTVWebApiResponseModelsEroticVideo.


        :param tags: The tags of this SaveTVWebApiResponseModelsEroticVideo.  # noqa: E501
        :type: list[str]
        """

        self._tags = tags

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SaveTVWebApiResponseModelsEroticVideo, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SaveTVWebApiResponseModelsEroticVideo):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
