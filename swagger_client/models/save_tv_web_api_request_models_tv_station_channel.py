# coding: utf-8

"""
    Save.TV API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v3
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class SaveTVWebApiRequestModelsTvStationChannel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'tv_station_id': 'int',
        'channel_time_frame_id': 'int',
        'tv_category_id': 'int',
        'tv_sub_category_id': 'int',
        'name': 'str'
    }

    attribute_map = {
        'tv_station_id': 'tvStationId',
        'channel_time_frame_id': 'channelTimeFrameId',
        'tv_category_id': 'tvCategoryId',
        'tv_sub_category_id': 'tvSubCategoryId',
        'name': 'name'
    }

    def __init__(self, tv_station_id=None, channel_time_frame_id=None, tv_category_id=None, tv_sub_category_id=None, name=None):  # noqa: E501
        """SaveTVWebApiRequestModelsTvStationChannel - a model defined in Swagger"""  # noqa: E501

        self._tv_station_id = None
        self._channel_time_frame_id = None
        self._tv_category_id = None
        self._tv_sub_category_id = None
        self._name = None
        self.discriminator = None

        if tv_station_id is not None:
            self.tv_station_id = tv_station_id
        if channel_time_frame_id is not None:
            self.channel_time_frame_id = channel_time_frame_id
        if tv_category_id is not None:
            self.tv_category_id = tv_category_id
        if tv_sub_category_id is not None:
            self.tv_sub_category_id = tv_sub_category_id
        if name is not None:
            self.name = name

    @property
    def tv_station_id(self):
        """Gets the tv_station_id of this SaveTVWebApiRequestModelsTvStationChannel.  # noqa: E501


        :return: The tv_station_id of this SaveTVWebApiRequestModelsTvStationChannel.  # noqa: E501
        :rtype: int
        """
        return self._tv_station_id

    @tv_station_id.setter
    def tv_station_id(self, tv_station_id):
        """Sets the tv_station_id of this SaveTVWebApiRequestModelsTvStationChannel.


        :param tv_station_id: The tv_station_id of this SaveTVWebApiRequestModelsTvStationChannel.  # noqa: E501
        :type: int
        """

        self._tv_station_id = tv_station_id

    @property
    def channel_time_frame_id(self):
        """Gets the channel_time_frame_id of this SaveTVWebApiRequestModelsTvStationChannel.  # noqa: E501


        :return: The channel_time_frame_id of this SaveTVWebApiRequestModelsTvStationChannel.  # noqa: E501
        :rtype: int
        """
        return self._channel_time_frame_id

    @channel_time_frame_id.setter
    def channel_time_frame_id(self, channel_time_frame_id):
        """Sets the channel_time_frame_id of this SaveTVWebApiRequestModelsTvStationChannel.


        :param channel_time_frame_id: The channel_time_frame_id of this SaveTVWebApiRequestModelsTvStationChannel.  # noqa: E501
        :type: int
        """

        self._channel_time_frame_id = channel_time_frame_id

    @property
    def tv_category_id(self):
        """Gets the tv_category_id of this SaveTVWebApiRequestModelsTvStationChannel.  # noqa: E501


        :return: The tv_category_id of this SaveTVWebApiRequestModelsTvStationChannel.  # noqa: E501
        :rtype: int
        """
        return self._tv_category_id

    @tv_category_id.setter
    def tv_category_id(self, tv_category_id):
        """Sets the tv_category_id of this SaveTVWebApiRequestModelsTvStationChannel.


        :param tv_category_id: The tv_category_id of this SaveTVWebApiRequestModelsTvStationChannel.  # noqa: E501
        :type: int
        """

        self._tv_category_id = tv_category_id

    @property
    def tv_sub_category_id(self):
        """Gets the tv_sub_category_id of this SaveTVWebApiRequestModelsTvStationChannel.  # noqa: E501


        :return: The tv_sub_category_id of this SaveTVWebApiRequestModelsTvStationChannel.  # noqa: E501
        :rtype: int
        """
        return self._tv_sub_category_id

    @tv_sub_category_id.setter
    def tv_sub_category_id(self, tv_sub_category_id):
        """Sets the tv_sub_category_id of this SaveTVWebApiRequestModelsTvStationChannel.


        :param tv_sub_category_id: The tv_sub_category_id of this SaveTVWebApiRequestModelsTvStationChannel.  # noqa: E501
        :type: int
        """

        self._tv_sub_category_id = tv_sub_category_id

    @property
    def name(self):
        """Gets the name of this SaveTVWebApiRequestModelsTvStationChannel.  # noqa: E501


        :return: The name of this SaveTVWebApiRequestModelsTvStationChannel.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SaveTVWebApiRequestModelsTvStationChannel.


        :param name: The name of this SaveTVWebApiRequestModelsTvStationChannel.  # noqa: E501
        :type: str
        """

        self._name = name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SaveTVWebApiRequestModelsTvStationChannel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SaveTVWebApiRequestModelsTvStationChannel):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
