# coding: utf-8

"""
    Save.TV API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v3
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class SaveTVWebApiResponseModelsContract(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'has_xl_package': 'bool',
        'has_xxl_package': 'bool',
        'is_locked': 'bool',
        'is_cancelled': 'bool',
        'is_running': 'bool',
        'package_name': 'str'
    }

    attribute_map = {
        'has_xl_package': 'hasXLPackage',
        'has_xxl_package': 'hasXXLPackage',
        'is_locked': 'isLocked',
        'is_cancelled': 'isCancelled',
        'is_running': 'isRunning',
        'package_name': 'packageName'
    }

    def __init__(self, has_xl_package=None, has_xxl_package=None, is_locked=None, is_cancelled=None, is_running=None, package_name=None):  # noqa: E501
        """SaveTVWebApiResponseModelsContract - a model defined in Swagger"""  # noqa: E501

        self._has_xl_package = None
        self._has_xxl_package = None
        self._is_locked = None
        self._is_cancelled = None
        self._is_running = None
        self._package_name = None
        self.discriminator = None

        if has_xl_package is not None:
            self.has_xl_package = has_xl_package
        if has_xxl_package is not None:
            self.has_xxl_package = has_xxl_package
        if is_locked is not None:
            self.is_locked = is_locked
        if is_cancelled is not None:
            self.is_cancelled = is_cancelled
        if is_running is not None:
            self.is_running = is_running
        if package_name is not None:
            self.package_name = package_name

    @property
    def has_xl_package(self):
        """Gets the has_xl_package of this SaveTVWebApiResponseModelsContract.  # noqa: E501


        :return: The has_xl_package of this SaveTVWebApiResponseModelsContract.  # noqa: E501
        :rtype: bool
        """
        return self._has_xl_package

    @has_xl_package.setter
    def has_xl_package(self, has_xl_package):
        """Sets the has_xl_package of this SaveTVWebApiResponseModelsContract.


        :param has_xl_package: The has_xl_package of this SaveTVWebApiResponseModelsContract.  # noqa: E501
        :type: bool
        """

        self._has_xl_package = has_xl_package

    @property
    def has_xxl_package(self):
        """Gets the has_xxl_package of this SaveTVWebApiResponseModelsContract.  # noqa: E501


        :return: The has_xxl_package of this SaveTVWebApiResponseModelsContract.  # noqa: E501
        :rtype: bool
        """
        return self._has_xxl_package

    @has_xxl_package.setter
    def has_xxl_package(self, has_xxl_package):
        """Sets the has_xxl_package of this SaveTVWebApiResponseModelsContract.


        :param has_xxl_package: The has_xxl_package of this SaveTVWebApiResponseModelsContract.  # noqa: E501
        :type: bool
        """

        self._has_xxl_package = has_xxl_package

    @property
    def is_locked(self):
        """Gets the is_locked of this SaveTVWebApiResponseModelsContract.  # noqa: E501


        :return: The is_locked of this SaveTVWebApiResponseModelsContract.  # noqa: E501
        :rtype: bool
        """
        return self._is_locked

    @is_locked.setter
    def is_locked(self, is_locked):
        """Sets the is_locked of this SaveTVWebApiResponseModelsContract.


        :param is_locked: The is_locked of this SaveTVWebApiResponseModelsContract.  # noqa: E501
        :type: bool
        """

        self._is_locked = is_locked

    @property
    def is_cancelled(self):
        """Gets the is_cancelled of this SaveTVWebApiResponseModelsContract.  # noqa: E501


        :return: The is_cancelled of this SaveTVWebApiResponseModelsContract.  # noqa: E501
        :rtype: bool
        """
        return self._is_cancelled

    @is_cancelled.setter
    def is_cancelled(self, is_cancelled):
        """Sets the is_cancelled of this SaveTVWebApiResponseModelsContract.


        :param is_cancelled: The is_cancelled of this SaveTVWebApiResponseModelsContract.  # noqa: E501
        :type: bool
        """

        self._is_cancelled = is_cancelled

    @property
    def is_running(self):
        """Gets the is_running of this SaveTVWebApiResponseModelsContract.  # noqa: E501


        :return: The is_running of this SaveTVWebApiResponseModelsContract.  # noqa: E501
        :rtype: bool
        """
        return self._is_running

    @is_running.setter
    def is_running(self, is_running):
        """Sets the is_running of this SaveTVWebApiResponseModelsContract.


        :param is_running: The is_running of this SaveTVWebApiResponseModelsContract.  # noqa: E501
        :type: bool
        """

        self._is_running = is_running

    @property
    def package_name(self):
        """Gets the package_name of this SaveTVWebApiResponseModelsContract.  # noqa: E501


        :return: The package_name of this SaveTVWebApiResponseModelsContract.  # noqa: E501
        :rtype: str
        """
        return self._package_name

    @package_name.setter
    def package_name(self, package_name):
        """Sets the package_name of this SaveTVWebApiResponseModelsContract.


        :param package_name: The package_name of this SaveTVWebApiResponseModelsContract.  # noqa: E501
        :type: str
        """

        self._package_name = package_name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SaveTVWebApiResponseModelsContract, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SaveTVWebApiResponseModelsContract):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
