# coding: utf-8

"""
    Save.TV API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v3
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class OlympWebApiResponseModelsError(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'user_message': 'str',
        'developer_messages': 'list[str]',
        'properties': 'list[str]',
        'reference': 'str'
    }

    attribute_map = {
        'id': 'id',
        'user_message': 'userMessage',
        'developer_messages': 'developerMessages',
        'properties': 'properties',
        'reference': 'reference'
    }

    def __init__(self, id=None, user_message=None, developer_messages=None, properties=None, reference=None):  # noqa: E501
        """OlympWebApiResponseModelsError - a model defined in Swagger"""  # noqa: E501

        self._id = None
        self._user_message = None
        self._developer_messages = None
        self._properties = None
        self._reference = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if user_message is not None:
            self.user_message = user_message
        if developer_messages is not None:
            self.developer_messages = developer_messages
        if properties is not None:
            self.properties = properties
        if reference is not None:
            self.reference = reference

    @property
    def id(self):
        """Gets the id of this OlympWebApiResponseModelsError.  # noqa: E501


        :return: The id of this OlympWebApiResponseModelsError.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OlympWebApiResponseModelsError.


        :param id: The id of this OlympWebApiResponseModelsError.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def user_message(self):
        """Gets the user_message of this OlympWebApiResponseModelsError.  # noqa: E501


        :return: The user_message of this OlympWebApiResponseModelsError.  # noqa: E501
        :rtype: str
        """
        return self._user_message

    @user_message.setter
    def user_message(self, user_message):
        """Sets the user_message of this OlympWebApiResponseModelsError.


        :param user_message: The user_message of this OlympWebApiResponseModelsError.  # noqa: E501
        :type: str
        """

        self._user_message = user_message

    @property
    def developer_messages(self):
        """Gets the developer_messages of this OlympWebApiResponseModelsError.  # noqa: E501


        :return: The developer_messages of this OlympWebApiResponseModelsError.  # noqa: E501
        :rtype: list[str]
        """
        return self._developer_messages

    @developer_messages.setter
    def developer_messages(self, developer_messages):
        """Sets the developer_messages of this OlympWebApiResponseModelsError.


        :param developer_messages: The developer_messages of this OlympWebApiResponseModelsError.  # noqa: E501
        :type: list[str]
        """

        self._developer_messages = developer_messages

    @property
    def properties(self):
        """Gets the properties of this OlympWebApiResponseModelsError.  # noqa: E501


        :return: The properties of this OlympWebApiResponseModelsError.  # noqa: E501
        :rtype: list[str]
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this OlympWebApiResponseModelsError.


        :param properties: The properties of this OlympWebApiResponseModelsError.  # noqa: E501
        :type: list[str]
        """

        self._properties = properties

    @property
    def reference(self):
        """Gets the reference of this OlympWebApiResponseModelsError.  # noqa: E501


        :return: The reference of this OlympWebApiResponseModelsError.  # noqa: E501
        :rtype: str
        """
        return self._reference

    @reference.setter
    def reference(self, reference):
        """Sets the reference of this OlympWebApiResponseModelsError.


        :param reference: The reference of this OlympWebApiResponseModelsError.  # noqa: E501
        :type: str
        """

        self._reference = reference

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(OlympWebApiResponseModelsError, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, OlympWebApiResponseModelsError):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
